@page
@model Ejounal_WebApp.Pages.Admins.ArticleResults.IndexModel
@* @using Ejounal_WebApp.Utils;
@using BussinessObject.Models.enums; *@

@{
    ViewData["Title"] = "Index";
    // if (HttpContext.Session.Get<SessionAuthor>("ADMIN")?.RoleName != RoleName.ADMIN)
    // {
    //     Response.Redirect("../../Login");
    //     return;
    // }

}

<h1>Review Result Information</h1>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ReviewResult[0].Users)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ReviewResult[0].Articles)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ReviewResult[0].Comment)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ReviewResult[0].Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ReviewResult[0].ReviewDate)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (Model.ReviewResult != null)
        {
            @foreach (var item in Model.ReviewResult)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Users.Username)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Articles.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Comment)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ReviewDate)
                    </td>
                </tr>
            }
        }
    </tbody>
</table>
<nav aria-label="Page navigation">
    <ul class="pagination justify-content-center">
        <li class="page-item @(!Model.ReviewResult.HasPreviousPage ? "disabled" : "")">
            <a class="page-link  border-dark" asp-page="Index" asp-route-PageIndex="@(Model.ReviewResult.PageIndex - 1)" tabindex="-1">Previous</a>
        </li>

        @for (var i = 1; i <= Model.ReviewResult.TotalPages; i++)
        {
            <li class="page-item @((i == Model.ReviewResult.PageIndex ) ? "active" : "")">
                <a class="page-link  border-dark" asp-page="Index" asp-route-PageIndex="@(i)">@i</a>
            </li>
        }

        <li class="page-item @(!Model.ReviewResult.HasNextPage ? "disabled" : "")">
            <a class="page-link  border-dark" asp-page="Index" asp-route-PageIndex="@(Model.ReviewResult.PageIndex + 1)">Next</a>
        </li>
    </ul>
</nav>